apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.line.newlinttest"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions{
        textReport true
        textOutput 'stdout'
        abortOnError true
        ignoreWarnings true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

// 配置assemble任务依赖lint，编译时就会执行Lint检查，如果报错则中断构建
//android.applicationVariants.all {
//    variant ->
//        variant.outputs.each { output ->
//            def lintTask = tasks["lint${variant.name.capitalize()}"]
//            output.assemble.dependsOn(lintTask)
//        }
//}

//这种配置也是可以的
afterEvaluate {
    tasks.matching {
        // 以process开头以ReleaseJavaRes或DebugJavaRes结尾的task
        it.name.contains('assemble')
    }.each { task ->
        task.dependsOn(lint)  // 任务依赖：执行task之前需要执行dependsOn指定的任务
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation project(':lintaar')
    compile project(':im')
}
